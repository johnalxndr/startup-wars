"use client"

import { useState, useEffect } from "react"
import { Switch } from "@/components/ui/8bit/switch"
import { Label } from "@/components/ui/8bit/label"

const SETTINGS_KEY = "startupWarsSettings"

interface GameSettings {
  aiEventsEnabled: boolean
}

export default function SettingsPage() {
  const [settings, setSettings] = useState<GameSettings>({
    aiEventsEnabled: false, // Default value
  })
  const [isLoaded, setIsLoaded] = useState(false) // Ensure we load from localStorage only once client-side

  // Load settings from localStorage on component mount (client-side only)
  useEffect(() => {
    const storedSettings = localStorage.getItem(SETTINGS_KEY)
    if (storedSettings) {
      try {
        setSettings(JSON.parse(storedSettings))
      } catch (error) {
        console.error("Failed to parse settings from localStorage", error)
        // Optionally clear corrupted settings
        // localStorage.removeItem(SETTINGS_KEY);
      }
    }
    setIsLoaded(true) // Mark as loaded
  }, [])

  // Save settings to localStorage whenever they change
  useEffect(() => {
    // Only save after initial load to prevent overwriting on server render/initial hydration mismatch
    if (isLoaded) {
      localStorage.setItem(SETTINGS_KEY, JSON.stringify(settings))
    }
  }, [settings, isLoaded])

  const handleToggleAiEvents = (checked: boolean) => {
    setSettings((prev) => ({ ...prev, aiEventsEnabled: checked }))
  }

  return (
    <div className="container mx-auto px-4 py-8 max-w-2xl">
      <h1 className="text-3xl font-bold mb-6">Game Settings</h1>

      <div className="space-y-4">
        <div className="flex items-center justify-between p-4 border rounded-lg shadow-sm">
          <Label htmlFor="ai-events-switch" className="text-lg font-medium">
            Enable AI-Powered Random Events
          </Label>
          {/* Only render Switch client-side after loading state */}
          {isLoaded ? (
             <Switch
               id="ai-events-switch"
               checked={settings.aiEventsEnabled}
               onCheckedChange={handleToggleAiEvents}
             />
          ) : (
            <div className="w-9 h-5 bg-gray-300 rounded-full animate-pulse"></div> // Placeholder
          )}

        </div>
        <p className="text-sm text-muted-foreground px-1">
          When enabled, random events will be generated by an AI, potentially leading to more unique and unpredictable scenarios. When disabled, standard pre-defined events will be used.
        </p>
      </div>

      {/* Add more settings sections here as needed */}
    </div>
  )
} 